#!/usr/bin/env bash
#
# @file container.sh
# @brief list of container and other info

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
FUNC_CREATE="create_docker"

declare -A DOCKER_NAMES=(
	[ansible]="ansible"
	[cloud_torrent]="cloud_torrent"
	[deluge]="deluge"
	[firefly - iii]="firefly-iii"
	[gitea]="gitea"
	[gitlab]="gitlab"
	[grafana]="grafana"
	[heimdall]="heimdall"
	[hlsxmltv]="hlsxmltv"
	[huginn]="huginn"
	[jackett]="jackett"
	[jellyfin]="jellyfin"
	[jenkins]="jenkins"
	[jupyterhub]="jupyterhub"
	[keycloak]="keycloak"
	[komga]="komga"
	[libresignage]="libresignage"
	[lidarr]="lidarr"
	[mailcow]="mailcow"
	[mcmyadmin]="mcmyadmin"
	[medusa]="medusa"
	[monica]="monica"
	[mopidy]="mopidy"
	[neko]="neko"
	[netdata]="netdata"
	[olaris]="olaris"
	[nextcloud]="nextcloud"
	[openvpn]="openvpn"
	[paperless]="paperless"
	[pihole]="pihole"
	[pyload]="pyload"
	[qbittorrent - vpn]="qbittorrent-vpn"
	[radarr]="radarr"
	[recalbox]="recalbox"
	[sabnzbd]="sabnzbd"
	[shidori]="shidori"
	[sonarr]="sonarr"
	[statping]="statping"
	[syncthing]="syncthing"
	[tautulli]="tautulli"
	[tdarrg]="tdarrg"
	[teamspeak]="teamspeak"
	[traefik]="traefik"
	[wallabag]="wallabag"
)

declare -A CONTAINER_NAMES=(
	[ansible]="ansible"
	[cloud_torrent]="cloud_torrent"
	[deluge]="deluge"
	[firefly - iii]="firefly-iii"
	[gitea]="gitea"
	[gitlab]="gitlab"
	[grafana]="grafana"
	[heimdall]="heimdall"
	[hlsxmltv]="hlsxmltv"
	[huginn]="huginn"
	[jackett]="jackett"
	[jellyfin]="jellyfin"
	[jenkins]="jenkins"
	[jupyterhub]="jupyterhub"
	[keycloak]="keycloak"
	[komga]="komga"
	[libresignage]="libresignage"
	[lidarr]="lidarr"
	[mailcow]="mailcow"
	[mcmyadmin]="mcmyadmin"
	[medusa]="medusa"
	[monica]="monica"
	[mopidy]="mopidy"
	[neko]="neko"
	[netdata]="netdata"
	[olaris]="olaris"
	[nextcloud]="nextcloud"
	[openvpn]="openvpn"
	[paperless]="paperless"
	[pihole]="pihole"
	[pyload]="pyload"
	[qbittorrent - vpn]="qbittorrent-vpn"
	[radarr]="radarr"
	[recalbox]="recalbox"
	[sabnzbd]="sabnzbd"
	[shidori]="shidori"
	[sonarr]="sonarr"
	[statping]="statping"
	[syncthing]="syncthing"
	[tautulli]="tautulli"
	[tdarrg]="tdarrg"
	[teamspeak]="teamspeak"
	[traefik]="traefik"
	[wallabag]="wallabag"
)

declare -A CONTAINER_DESCRIPTION=(
	[ansible]="ansible"
	[cloud_torrent]="cloud_torrent"
	[deluge]="deluge"
	[firefly - iii]="firefly-iii"
	[gitea]="gitea"
	[gitlab]="gitlab"
	[grafana]="grafana"
	[heimdall]="heimdall"
	[hlsxmltv]="hlsxmltv"
	[huginn]="huginn"
	[jackett]="jackett"
	[jellyfin]="jellyfin"
	[jenkins]="jenkins"
	[jupyterhub]="jupyterhub"
	[keycloak]="keycloak"
	[komga]="komga"
	[libresignage]="libresignage"
	[lidarr]="lidarr"
	[mailcow]="mailcow"
	[mcmyadmin]="mcmyadmin"
	[medusa]="medusa"
	[monica]="monica"
	[mopidy]="mopidy"
	[neko]="neko"
	[netdata]="netdata"
	[olaris]="olaris"
	[nextcloud]="nextcloud"
	[openvpn]="openvpn"
	[paperless]="paperless"
	[pihole]="pihole"
	[pyload]="pyload"
	[qbittorrent - vpn]="qbittorrent-vpn"
	[radarr]="radarr"
	[recalbox]="recalbox"
	[sabnzbd]="sabnzbd"
	[shidori]="shidori"
	[sonarr]="sonarr"
	[statping]="statping"
	[syncthing]="syncthing"
	[tautulli]="tautulli"
	[tdarrg]="tdarrg"
	[teamspeak]="teamspeak"
	[traefik]="traefik"
	[wallabag]="wallabag"
)

declare -A CONTAINER_WEBPORT=(
	[ansible]="ansible"
	[cloud_torrent]="cloud_torrent"
	[deluge]="deluge"
	[firefly - iii]="firefly-iii"
	[gitea]="gitea"
	[gitlab]="gitlab"
	[grafana]="grafana"
	[heimdall]="heimdall"
	[hlsxmltv]="hlsxmltv"
	[huginn]="huginn"
	[jackett]="jackett"
	[jellyfin]="jellyfin"
	[jenkins]="jenkins"
	[jupyterhub]="jupyterhub"
	[keycloak]="keycloak"
	[komga]="komga"
	[libresignage]="libresignage"
	[lidarr]="lidarr"
	[mailcow]="mailcow"
	[mcmyadmin]="mcmyadmin"
	[medusa]="medusa"
	[monica]="monica"
	[mopidy]="mopidy"
	[neko]="neko"
	[netdata]="netdata"
	[olaris]="olaris"
	[nextcloud]="nextcloud"
	[openvpn]="openvpn"
	[paperless]="paperless"
	[pihole]="pihole"
	[pyload]="pyload"
	[qbittorrent - vpn]="qbittorrent-vpn"
	[radarr]="radarr"
	[recalbox]="recalbox"
	[sabnzbd]="sabnzbd"
	[shidori]="shidori"
	[sonarr]="sonarr"
	[statping]="statping"
	[syncthing]="syncthing"
	[tautulli]="tautulli"
	[tdarrg]="tdarrg"
	[teamspeak]="teamspeak"
	[traefik]="traefik"
	[wallabag]="wallabag"
)

import_all_sh() {
	find "$DIR/images" -name "*.sh" -execdir chmod u+x {} +
	local names=$(find "$1" -name "$2")

	local SAVEIFS="$IFS" # Save current IFS
	local IFS=$'\n'      # Change IFS to new line
	local names=($names) # split to array $names
	local IFS="$SAVEIFS" # Restore IFS

	for ((i = 0; i < ${#names[@]}; i++)); do
		echo "$i: ${names[$i]}"
		source "$DIR"/"${names[$i]}"
	done

	return 0
}

manage_exec_containers_list() {
	echo "$SETUP_CONTAINER_MENU"
	touch /tmp/containers.txt
	containers=()
	mapfile -t containers <<<"$SETUP_CONTAINER_MENU"
	for container_name in "${containers[@]}"; do
		echo "$container_name" >>/tmp/containers.txt
		echo "src/docker/images/$container_name/$container_name.sh"
		source "src/docker/images/$container_name/$container_name.sh"
		echo "create_docker_$container_name"
		"create_docker_$container_name"
	done
}

generate_list_container_install() {
	return 0
}
